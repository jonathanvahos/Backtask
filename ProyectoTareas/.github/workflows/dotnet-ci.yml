name: .NET CI with Code Coverage

on:
  push:
    branches: [ main, Jonathan ]  # Se ejecuta cuando hay un push a main o Jonathan
  pull_request:
    branches: [ main, Jonathan ]  # Se ejecuta cuando hay un pull request a main o Jonathan

jobs:
  build-and-test:
    runs-on: ubuntu-latest  # Usa una máquina virtual con Ubuntu

    steps:
      - name: Checkout code
        uses: actions/checkout@v3  # Paso 1: Descargar el código del repositorio

      - name: Setup .NET
        uses: actions/setup-dotnet@v3  # Paso 2: Configurar .NET
        with:
          dotnet-version: '8.0'  # Especifica la versión de .NET que usas

      - name: Restore dependencies
        run: dotnet restore  # Paso 3: Restaurar dependencias

      - name: Build
        run: dotnet build --configuration Release --no-restore  # Paso 4: Compilar el proyecto

      - name: Run tests with coverage
        run: |  # Paso 5: Ejecutar pruebas con cobertura de código
          dotnet test --no-restore --verbosity normal /p:CollectCoverage=true /p:CoverletOutputFormat=opencover
          dotnet tool install -g dotnet-reportgenerator-globaltool
          reportgenerator -reports:./**/coverage.opencover.xml -targetdir:./CoverageReport -reporttypes:Html

      - name: Upload coverage report
        uses: actions/upload-artifact@v4  # se actualiza a la versión 4
        with:
          name: coverage-report
          path: ./CoverageReport

      - name: Notify on failure
        if: failure()  # Paso 7: Notificar por correo electrónico si el flujo de trabajo falla
        run: echo "Las pruebas han fallado. Revisa los logs en GitHub Actions."
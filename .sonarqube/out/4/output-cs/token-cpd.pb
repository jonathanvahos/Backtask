¥O
ÜC:\Users\jonathan.vahos\OneDrive - SoftwareOne\Desktop\Proyecto Practica\ProyectoTareas\ProyectoTareas\Controllers\TareasController.cs
	namespace 	
ProyectoTareas
 
. 
Controllers $
{		 
[ 
Route 

(
 
$str 
) 
] 
[ 
ApiController 
] 
public 

class 
TareasController !
:" #
ControllerBase$ 2
{ 
private 
readonly 
IOpereaciones &
<& '
Tarea' ,
>, -
_repositorio. :
;: ;
private 
readonly 
IMapper  
_mapper! (
;( )
public 
TareasController 
(  
IOpereaciones  -
<- .
Tarea. 3
>3 4
repositorio5 @
,@ A
IMapperB I
mapperJ P
)P Q
{ 	
_repositorio 
= 
repositorio &
??' )
throw* /
new0 3!
ArgumentNullException4 I
(I J
nameofJ P
(P Q
repositorioQ \
)\ ]
)] ^
;^ _
_mapper 
= 
mapper 
?? 
throw  %
new& )!
ArgumentNullException* ?
(? @
nameof@ F
(F G
mapperG M
)M N
)N O
;O P
} 	
[ 	
HttpGet	 
] 
public 
async 
Task 
< 
ActionResult &
<& '
IEnumerable' 2
<2 3
TareaDTO3 ;
>; <
>< =
>= >
	GetTareas? H
(H I
)I J
{ 	
try 
{   
var"" 
tareas"" 
="" 
await"" "
_repositorio""# /
.""/ 0
ObtenerTodosAsync""0 A
(""A B
)""B C
;""C D
var$$ 
	tareasDto$$ 
=$$ 
_mapper$$  '
.$$' (
Map$$( +
<$$+ ,
IEnumerable$$, 7
<$$7 8
TareaDTO$$8 @
>$$@ A
>$$A B
($$B C
tareas$$C I
)$$I J
;$$J K
return&& 
Ok&& 
(&& 
	tareasDto&& #
)&&# $
;&&$ %
}'' 
catch(( 
((( 
	Exception(( 
ex(( 
)((  
{)) 
return++ 

StatusCode++ !
(++! "
$num++" %
,++% &
$"++' )
$str++) F
{++F G
ex++G I
.++I J
Message++J Q
}++Q R
"++R S
)++S T
;++T U
},, 
}-- 	
[00 	
HttpGet00	 
(00 
$str00 
)00 
]00 
public11 
async11 
Task11 
<11 
ActionResult11 &
<11& '
TareaDTO11' /
>11/ 0
>110 1
GetTarea112 :
(11: ;
Guid11; ?
id11@ B
)11B C
{22 	
try33 
{44 
var66 
tarea66 
=66 
await66 !
_repositorio66" .
.66. /
BuscarPorIdAsync66/ ?
(66? @
id66@ B
)66B C
;66C D
if88 
(88 
tarea88 
==88 
null88 !
)88! "
{99 
return;; 
NotFound;; #
(;;# $
$str;;$ 9
);;9 :
;;;: ;
}<< 
var>> 
tareaDto>> 
=>> 
_mapper>> &
.>>& '
Map>>' *
<>>* +
TareaDTO>>+ 3
>>>3 4
(>>4 5
tarea>>5 :
)>>: ;
;>>; <
return@@ 
Ok@@ 
(@@ 
tareaDto@@ "
)@@" #
;@@# $
}AA 
catchBB 
(BB 
	ExceptionBB 
exBB 
)BB  
{CC 
returnEE 

StatusCodeEE !
(EE! "
$numEE" %
,EE% &
$"EE' )
$strEE) D
{EED E
exEEE G
.EEG H
MessageEEH O
}EEO P
"EEP Q
)EEQ R
;EER S
}FF 
}GG 	
[JJ 	
HttpPostJJ	 
]JJ 
publicKK 
asyncKK 
TaskKK 
<KK 
ActionResultKK &
<KK& '
TareaDTOKK' /
>KK/ 0
>KK0 1

PostTareasKK2 <
(KK< =
TareaDTOKK= E
tareaDtoKKF N
)KKN O
{LL 	
tryMM 
{NN 
ifPP 
(PP 
tareaDtoPP 
==PP 
nullPP  $
)PP$ %
{QQ 
returnSS 

BadRequestSS %
(SS% &
$strSS& O
)SSO P
;SSP Q
}TT 
varWW 
tareaWW 
=WW 
_mapperWW #
.WW# $
MapWW$ '
<WW' (
TareaWW( -
>WW- .
(WW. /
tareaDtoWW/ 7
)WW7 8
;WW8 9
awaitYY 
_repositorioYY "
.YY" #
AgregarAsyncYY# /
(YY/ 0
tareaYY0 5
)YY5 6
;YY6 7
return[[ 
CreatedAtAction[[ &
([[& '
nameof[[' -
([[- .
GetTarea[[. 6
)[[6 7
,[[7 8
new[[9 <
{[[= >
id[[? A
=[[B C
tarea[[D I
.[[I J
Id[[J L
}[[M N
,[[N O
_mapper[[P W
.[[W X
Map[[X [
<[[[ \
TareaDTO[[\ d
>[[d e
([[e f
tarea[[f k
)[[k l
)[[l m
;[[m n
}\\ 
catch]] 
(]] 
	Exception]] 
ex]] 
)]]  
{^^ 
return`` 

StatusCode`` !
(``! "
$num``" %
,``% &
$"``' )
$str``) D
{``D E
ex``E G
.``G H
Message``H O
}``O P
"``P Q
)``Q R
;``R S
}aa 
}bb 	
[ee 	
HttpPutee	 
(ee 
$stree 
)ee 
]ee 
publicff 
asyncff 
Taskff 
<ff 
IActionResultff '
>ff' (
PutTareaff) 1
(ff1 2
Guidff2 6
idff7 9
,ff9 :
TareaDTOff; C
tareaDtoffD L
)ffL M
{gg 	
tryhh 
{ii 
ifkk 
(kk 
idkk 
!=kk 
tareaDtokk "
.kk" #
Idkk# %
)kk% &
{ll 
returnnn 

BadRequestnn %
(nn% &
$strnn& =
)nn= >
;nn> ?
}oo 
varrr 
tareaExistenterr "
=rr# $
awaitrr% *
_repositoriorr+ 7
.rr7 8
BuscarPorIdAsyncrr8 H
(rrH I
idrrI K
)rrK L
;rrL M
iftt 
(tt 
tareaExistentett "
==tt# %
nulltt& *
)tt* +
{uu 
returnww 
NotFoundww #
(ww# $
$strww$ 9
)ww9 :
;ww: ;
}xx 
_mapper{{ 
.{{ 
Map{{ 
({{ 
tareaDto{{ $
,{{$ %
tareaExistente{{& 4
){{4 5
;{{5 6
await}} 
_repositorio}} "
.}}" #
ActualizarAsync}}# 2
(}}2 3
tareaExistente}}3 A
)}}A B
;}}B C
return
ÄÄ 
Ok
ÄÄ 
(
ÄÄ 
new
ÄÄ 
{
ÄÄ 
message
ÄÄ  '
=
ÄÄ( )
$str
ÄÄ* S
}
ÄÄT U
)
ÄÄU V
;
ÄÄV W
}
ÅÅ 
catch
ÇÇ 
(
ÇÇ 
	Exception
ÇÇ 
ex
ÇÇ 
)
ÇÇ  
{
ÉÉ 
return
ÖÖ 

StatusCode
ÖÖ !
(
ÖÖ! "
$num
ÖÖ" %
,
ÖÖ% &
$"
ÖÖ' )
$str
ÖÖ) G
{
ÖÖG H
ex
ÖÖH J
.
ÖÖJ K
Message
ÖÖK R
}
ÖÖR S
"
ÖÖS T
)
ÖÖT U
;
ÖÖU V
}
ÜÜ 
}
áá 	
[
ää 	

HttpDelete
ää	 
(
ää 
$str
ää 
)
ää 
]
ää 
public
ãã 
async
ãã 
Task
ãã 
<
ãã 
ActionResult
ãã &
>
ãã& '
DeleteTareas
ãã( 4
(
ãã4 5
Guid
ãã5 9
id
ãã: <
)
ãã< =
{
åå 	
try
çç 
{
éé 
var
êê 
tarea
êê 
=
êê 
await
êê !
_repositorio
êê" .
.
êê. /
BuscarPorIdAsync
êê/ ?
(
êê? @
id
êê@ B
)
êêB C
;
êêC D
if
íí 
(
íí 
tarea
íí 
==
íí 
null
íí !
)
íí! "
{
ìì 
return
ïï 
NotFound
ïï #
(
ïï# $
$str
ïï$ 9
)
ïï9 :
;
ïï: ;
}
ññ 
await
ôô 
_repositorio
ôô "
.
ôô" #
EliminarAsync
ôô# 0
(
ôô0 1
id
ôô1 3
)
ôô3 4
;
ôô4 5
return
õõ 
Ok
õõ 
(
õõ 
new
õõ 
{
õõ 
message
õõ  '
=
õõ( )
$str
õõ* Q
}
õõR S
)
õõS T
;
õõT U
}
úú 
catch
ùù 
(
ùù 
	Exception
ùù 
ex
ùù 
)
ùù  
{
ûû 
return
†† 

StatusCode
†† !
(
††! "
$num
††" %
,
††% &
$"
††' )
$str
††) E
{
††E F
ex
††F H
.
††H I
Message
††I P
}
††P Q
"
††Q R
)
††R S
;
††S T
}
°° 
}
¢¢ 	
}
££ 
}§§ ¢
~C:\Users\jonathan.vahos\OneDrive - SoftwareOne\Desktop\Proyecto Practica\ProyectoTareas\ProyectoTareas\Data\TareasDbContext.cs
	namespace 	
ProyectoTareas
 
. 
Data 
{ 
public 

class 
TareasDbContext  
:! "
	DbContext# ,
{ 
public

 
TareasDbContext

 
(

 
DbContextOptions

 /
<

/ 0
TareasDbContext

0 ?
>

? @
options

A H
)

H I
: 
base 
( 
options 
) 
{ 	
} 	
public 
DbSet 
< 
Tarea 
> 
Tareas "
{# $
get% (
;( )
set* -
;- .
}/ 0
	protected 
override 
void 
OnModelCreating  /
(/ 0
ModelBuilder0 <
modelBuilder= I
)I J
{ 	
modelBuilder 
. 
Entity 
<  
Tarea  %
>% &
(& '
entity' -
=>. 0
{ 
entity 
. 
Property 
(  
t  !
=>" $
t% &
.& '
Titulo' -
)- .
.. /

IsRequired/ 9
(9 :
): ;
.; <
HasMaxLength< H
(H I
$numI L
)L M
;M N
entity 
. 
Property 
(  
t  !
=>" $
t% &
.& '
Descripcion' 2
)2 3
.3 4
HasMaxLength4 @
(@ A
$numA D
)D E
;E F
entity 
. 
Property 
(  
t  !
=>" $
t% &
.& '
FechaCreacion' 4
)4 5
.5 6
HasDefaultValueSql6 H
(H I
$strI T
)T U
;U V
}   
)   
;   
base## 
.## 
OnModelCreating##  
(##  !
modelBuilder##! -
)##- .
;##. /
}$$ 	
}%% 
}&& ô
ÅC:\Users\jonathan.vahos\OneDrive - SoftwareOne\Desktop\Proyecto Practica\ProyectoTareas\ProyectoTareas\Mappings\MappingProfile.cs
	namespace 	
ProyectoTareas
 
. 
Mappings !
{ 
public 

class 
MappingProfile 
:  !
Profile" )
{		 
public 
MappingProfile 
( 
) 
{ 	
	CreateMap 
< 
Tarea 
, 
TareaDTO %
>% &
(& '
)' (
;( )
	CreateMap 
< 
TareaDTO 
, 
Tarea  %
>% &
(& '
)' (
;( )
} 	
} 
} ‡
ëC:\Users\jonathan.vahos\OneDrive - SoftwareOne\Desktop\Proyecto Practica\ProyectoTareas\ProyectoTareas\Migrations\20250121153019_InitialCreate.cs
	namespace 	
ProyectoTareas
 
. 

Migrations #
{ 
[

 #
ExcludeFromCodeCoverage

 
]

 
public 

partial 
class 
InitialCreate &
:' (
	Migration) 2
{ 
	protected 
override 
void 
Up  "
(" #
MigrationBuilder# 3
migrationBuilder4 D
)D E
{ 	
migrationBuilder 
. 
CreateTable (
(( )
name 
: 
$str 
, 
columns 
: 
table 
=> !
new" %
{ 
Id 
= 
table 
. 
Column %
<% &
Guid& *
>* +
(+ ,
type, 0
:0 1
$str2 D
,D E
nullableF N
:N O
falseP U
)U V
,V W
Titulo 
= 
table "
." #
Column# )
<) *
string* 0
>0 1
(1 2
type2 6
:6 7
$str8 G
,G H
	maxLengthI R
:R S
$numT W
,W X
nullableY a
:a b
falsec h
)h i
,i j
Descripcion 
=  !
table" '
.' (
Column( .
<. /
string/ 5
>5 6
(6 7
type7 ;
:; <
$str= L
,L M
	maxLengthN W
:W X
$numY \
,\ ]
nullable^ f
:f g
falseh m
)m n
,n o

Completada 
=  
table! &
.& '
Column' -
<- .
bool. 2
>2 3
(3 4
type4 8
:8 9
$str: ?
,? @
nullableA I
:I J
falseK P
)P Q
,Q R
FechaCreacion !
=" #
table$ )
.) *
Column* 0
<0 1
DateTime1 9
>9 :
(: ;
type; ?
:? @
$strA L
,L M
nullableN V
:V W
falseX ]
,] ^
defaultValueSql_ n
:n o
$strp {
){ |
} 
, 
constraints 
: 
table "
=># %
{ 
table 
. 

PrimaryKey $
($ %
$str% 0
,0 1
x2 3
=>4 6
x7 8
.8 9
Id9 ;
); <
;< =
} 
) 
; 
} 	
	protected"" 
override"" 
void"" 
Down""  $
(""$ %
MigrationBuilder""% 5
migrationBuilder""6 F
)""F G
{## 	
migrationBuilder$$ 
.$$ 
	DropTable$$ &
($$& '
name%% 
:%% 
$str%% 
)%% 
;%%  
}&& 	
}'' 
}(( Ÿ
~C:\Users\jonathan.vahos\OneDrive - SoftwareOne\Desktop\Proyecto Practica\ProyectoTareas\ProyectoTareas\Models\IOpereaciones.cs
	namespace 	
ProyectoTareas
 
. 
Models 
{ 
public 

	interface 
IOpereaciones "
<" #
T# $
>$ %
{ 
Task 
AgregarAsync 
( 
T 
item  
)  !
;! "
Task 
< 
T 
> 
BuscarPorIdAsync  
(  !
Guid! %
id& (
)( )
;) *
Task 
< 
List 
< 
T 
> 
> 
ObtenerTodosAsync '
(' (
)( )
;) *
Task		 
ActualizarAsync		 
(		 
T		 
item		 #
)		# $
;		$ %
Task

 
EliminarAsync

 
(

 
Guid

 
id

  "
)

" #
;

# $
} 
} ﬂ$
ÇC:\Users\jonathan.vahos\OneDrive - SoftwareOne\Desktop\Proyecto Practica\ProyectoTareas\ProyectoTareas\Models\RepositorioTareas.cs
	namespace 	
ProyectoTareas
 
. 
Models 
{ 
public		 

class		 
RepositorioTareas		 "
:		# $
IOpereaciones		% 2
<		2 3
Tarea		3 8
>		8 9
{

 
private 
readonly 
TareasDbContext (
_context) 1
;1 2
public 
RepositorioTareas  
(  !
TareasDbContext! 0
context1 8
)8 9
{ 	
_context 
= 
context 
?? !
throw" '
new( +!
ArgumentNullException, A
(A B
nameofB H
(H I
contextI P
)P Q
)Q R
;R S
} 	
public 
async 
Task 
AgregarAsync &
(& '
Tarea' ,
item- 1
)1 2
{ 	
_context 
. 
Tareas 
. 
Add 
(  
item  $
)$ %
;% &
await 
_context 
. 
SaveChangesAsync +
(+ ,
), -
;- .
} 	
public 
async 
Task 
< 
Tarea 
>  
BuscarPorIdAsync! 1
(1 2
Guid2 6
id7 9
)9 :
{ 	
return 
await 
_context !
.! "
Tareas" (
.( )
	FindAsync) 2
(2 3
id3 5
)5 6
;6 7
} 	
public"" 
async"" 
Task"" 
<"" 
List"" 
<"" 
Tarea"" $
>""$ %
>""% &
ObtenerTodosAsync""' 8
(""8 9
)""9 :
{## 	
return$$ 
await$$ 
_context$$ !
.$$! "
Tareas$$" (
.$$( )
ToListAsync$$) 4
($$4 5
)$$5 6
;$$6 7
}%% 	
public(( 
async(( 
Task(( 
ActualizarAsync(( )
((() *
Tarea((* /
item((0 4
)((4 5
{)) 	
var** 
tarea** 
=** 
await** 
_context** &
.**& '
Tareas**' -
.**- .
AsNoTracking**. :
(**: ;
)**; <
.**< =
FirstOrDefaultAsync**= P
(**P Q
t**Q R
=>**S U
t**V W
.**W X
Id**X Z
==**[ ]
item**^ b
.**b c
Id**c e
)**e f
;**f g
if++ 
(++ 
tarea++ 
!=++ 
null++ 
)++ 
{,, 
item.. 
... 
FechaCreacion.. "
=..# $
tarea..% *
...* +
FechaCreacion..+ 8
;..8 9
_context11 
.11 
Entry11 
(11 
item11 #
)11# $
.11$ %
Property11% -
(11- .
t11. /
=>110 2
t113 4
.114 5
FechaCreacion115 B
)11B C
.11C D

IsModified11D N
=11O P
false11Q V
;11V W
_context22 
.22 
Entry22 
(22 
item22 #
)22# $
.22$ %
State22% *
=22+ ,
EntityState22- 8
.228 9
Modified229 A
;22A B
await44 
_context44 
.44 
SaveChangesAsync44 /
(44/ 0
)440 1
;441 2
}55 
}66 	
public99 
async99 
Task99 
EliminarAsync99 '
(99' (
Guid99( ,
id99- /
)99/ 0
{:: 	
var;; 
tarea;; 
=;; 
await;; 
_context;; &
.;;& '
Tareas;;' -
.;;- .
	FindAsync;;. 7
(;;7 8
id;;8 :
);;: ;
;;;; <
if<< 
(<< 
tarea<< 
!=<< 
null<< 
)<< 
{== 
_context>> 
.>> 
Tareas>> 
.>>  
Remove>>  &
(>>& '
tarea>>' ,
)>>, -
;>>- .
await?? 
_context?? 
.?? 
SaveChangesAsync?? /
(??/ 0
)??0 1
;??1 2
}@@ 
}AA 	
}BB 
}CC ª
vC:\Users\jonathan.vahos\OneDrive - SoftwareOne\Desktop\Proyecto Practica\ProyectoTareas\ProyectoTareas\Models\Tarea.cs
	namespace 	
ProyectoTareas
 
. 
Models 
{ 
public 

class 
Tarea 
: 
	TareaBase "
{ 
private 
string 
titulo 
; 
private 
string 
descripcion "
;" #
private		 
Boolean		 

completada		 "
;		" #
public 
string 
Titulo 
{ 	
get 
{ 
return 
titulo 
;  
}! "
set 
{ 
titulo 
= 
value  
;  !
}" #
} 	
public 
string 
Descripcion !
{ 	
get 
{ 
return 
descripcion $
;$ %
}& '
set 
{ 
descripcion 
= 
value  %
;% &
}' (
} 	
public 
Boolean 

Completada !
{ 	
get 
{ 
return 

completada #
;# $
}% &
set 
{ 

completada 
= 
value $
;$ %
}& '
} 	
public!! 
Tarea!! 
(!! 
)!! 
:!! 
base!! 
(!! 
)!! 
{"" 	
}## 	
public%% 
Tarea%% 
(%% 
string%% 
titulo%% "
,%%" #
string%%$ *
descripcion%%+ 6
,%%6 7
Boolean%%8 ?

completada%%@ J
)%%J K
:%%L M
base%%N R
(%%R S
)%%S T
{&& 	
Titulo'' 
='' 
titulo'' 
;'' 
Descripcion(( 
=(( 
descripcion(( %
;((% &

Completada)) 
=)) 

completada)) #
;))# $
}** 	
public.. 
override.. 
string.. 
MostrarTarea.. +
(..+ ,
).., -
{// 	
return00 
$"00 
$str00 
{00  
Id00  "
}00" #
$str00# %
"00% &
+00' (
$"11 
$str11 
{11 
Titulo11 
}11 
$str11 
"11  
+11! "
$"22 
$str22 
{22 
Descripcion22 &
}22& '
$str22' )
"22) *
+22+ ,
$"33 
$str33 
{33 

Completada33 $
}33$ %
$str33% '
"33' (
+33) *
$"44 
$str44 
{44 
FechaCreacion44 *
:44* +
$str44+ 5
}445 6
$str446 8
"448 9
;449 :
}55 	
}66 
}77 ≈
zC:\Users\jonathan.vahos\OneDrive - SoftwareOne\Desktop\Proyecto Practica\ProyectoTareas\ProyectoTareas\Models\TareaBase.cs
	namespace 	
ProyectoTareas
 
. 
Models 
{ 
public 

abstract 
class 
	TareaBase #
{ 
private 
Guid 
id 
; 
private 
DateTime 
fechaCreacion &
;& '
public 
Guid 
Id 
{ 	
get 
{ 
return 
id 
; 
} 
set 
{ 
id 
= 
value 
; 
} 
} 	
public 
DateTime 
FechaCreacion %
{ 	
get 
{ 
return 
fechaCreacion &
;& '
}( )
set 
{ 
fechaCreacion 
=  !
value" '
;' (
}) *
} 	
public 
	TareaBase 
( 
) 
{ 	
Id 
= 
Guid 
. 
NewGuid 
( 
) 
;  
FechaCreacion 
= 
DateTime $
.$ %
Now% (
;( )
} 	
public!! 
abstract!! 
String!! 
MostrarTarea!! +
(!!+ ,
)!!, -
;!!- .
}$$ 
}%% –
yC:\Users\jonathan.vahos\OneDrive - SoftwareOne\Desktop\Proyecto Practica\ProyectoTareas\ProyectoTareas\Models\TareaDTO.cs
	namespace 	
ProyectoTareas
 
. 
Models 
{ 
public 

class 
TareaDTO 
{ 
public 
Guid 
Id 
{ 
get 
; 
set !
;! "
}# $
public 
string 
Titulo 
{ 
get "
;" #
set$ '
;' (
}) *
public 
string 
Descripcion !
{" #
get$ '
;' (
set) ,
;, -
}. /
public		 
bool		 

Completada		 
{		  
get		! $
;		$ %
set		& )
;		) *
}		+ ,
public

 
DateTime

 
FechaCreacion

 %
{

& '
get

( +
;

+ ,
set

- 0
;

0 1
}

2 3
} 
} û
qC:\Users\jonathan.vahos\OneDrive - SoftwareOne\Desktop\Proyecto Practica\ProyectoTareas\ProyectoTareas\Program.cs
	namespace 	
ProyectoTareas
 
{ 
public 

class 
Program 
{		 
public

 
static

 
void

 
Main

 
(

  
)

  !
{ 	
var 
builder 
= 
WebApplication (
.( )
CreateBuilder) 6
(6 7
)7 8
;8 9
builder 
. 
Services 
. 
AddAutoMapper *
(* +
typeof+ 1
(1 2
MappingProfile2 @
)@ A
)A B
;B C
builder 
. 
Services 
. 
AddDbContext )
<) *
TareasDbContext* 9
>9 :
(: ;
options; B
=>C E
{ 
options 
. 
UseSqlServer $
($ %
builder% ,
., -
Configuration- :
.: ;
GetConnectionString; N
(N O
$strO b
)b c
)c d
;d e
} 
) 
; 
builder 
. 
Services 
. 
	AddScoped &
<& '
IOpereaciones' 4
<4 5
Tarea5 :
>: ;
,; <
RepositorioTareas= N
>N O
(O P
)P Q
;Q R
builder 
. 
Services 
. 
AddAuthorization -
(- .
). /
;/ 0
builder 
. 
Services 
. 
AddControllers +
(+ ,
), -
;- .
builder"" 
."" 
Services"" 
."" 
AddCors"" $
(""$ %
options""% ,
=>""- /
{## 
options$$ 
.$$ 
	AddPolicy$$ !
($$! "
$str$$" 2
,$$2 3
policy$$4 :
=>$$; =
{%% 
policy&& 
.&& 
WithOrigins&& &
(&&& '
$str&&' >
)&&> ?
.'' 
AllowAnyHeader'' )
('') *
)''* +
.(( 
AllowAnyMethod(( )
((() *
)((* +
;((+ ,
})) 
))) 
;)) 
}** 
)** 
;** 
builder,, 
.,, 
Services,, 
.,, #
AddEndpointsApiExplorer,, 4
(,,4 5
),,5 6
;,,6 7
builder-- 
.-- 
Services-- 
.-- 
AddSwaggerGen-- *
(--* +
)--+ ,
;--, -
var// 
app// 
=// 
builder// 
.// 
Build// #
(//# $
)//$ %
;//% &
if22 
(22 
app22 
.22 
Environment22 
.22  
IsDevelopment22  -
(22- .
)22. /
)22/ 0
{33 
app44 
.44 

UseSwagger44 
(44 
)44  
;44  !
app55 
.55 
UseSwaggerUI55  
(55  !
)55! "
;55" #
}66 
app88 
.88 
UseHttpsRedirection88 #
(88# $
)88$ %
;88% &
app;; 
.;; 
UseCors;; 
(;; 
$str;; (
);;( )
;;;) *
app== 
.== 
UseAuthorization==  
(==  !
)==! "
;==" #
app?? 
.?? 
MapControllers?? 
(?? 
)??  
;??  !
appAA 
.AA 
RunAA 
(AA 
)AA 
;AA 
}BB 	
}CC 
}DD 